version: 2
jobs:
  build-and-test:
    docker:
      - image: circleci/node:10.15.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-node-cache-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: v1-node-cache-{{ checksum "package.json" }}
          paths:
              - node_modules
      - run: npm test
      - run: npm run build
      - persist_to_workspace:
          root: ~/project
          paths:
            - dist
            - package.json
            - manifest-staging.yml
            - manifest-prod.yml


  deploy-staging:
    docker:
      - image: govau/cf-cli
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Deploying to staging cloud.gov.au
          command: |
            cd ~/project
            cf login -a api.system.y.cld.gov.au -o $CF_ORG_STAGING -s $CF_SPACE_STAGING -u $CF_USER_STAGING -p $CF_PASSWORD_STAGING
            cf zero-downtime-push furnace -f manifest-staging.yml


  deploy-prod:
    docker:
      - image: govau/cf-cli
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Deploying to production cloud.gov.au
          command: |
            cd ~/project
            cf login -a api.system.b.cld.gov.au -o $CF_ORG_PROD -s $CF_SPACE_PROD -u $CF_USER_PROD -p $CF_PASSWORD_PROD
            cf zero-downtime-push furnace -f manifest-prod.yml


# This is where we orchestrate the jobs
workflows:
  version: 2
  build-and-test:
    jobs:
      - build-and-test
      - deploy-staging:
          filters:
            branches:
              only: develop
          requires:
            - build-and-test

      - deploy-prod:
          filters:
            branches:
              only: master
          requires:
            - build-and-test
